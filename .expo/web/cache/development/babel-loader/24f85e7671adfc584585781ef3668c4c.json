{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/adn/Documentos/bootcamp/hackthejob/mobile-test-s7cjcbosxt/App.jsx\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport { Container, Content, Icon, Text } from \"native-base\";\nimport CurrentTrip from \"./components/CurrentTrip\";\nimport AppHeader from \"./components/AppHeader\";\nimport SwipCards from \"./components/SwipCards\";\nimport FormTour from \"./components/FormTour\";\nimport * as Font from \"expo-font\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  useEffect(function () {\n    if (!fontsLoaded) {\n      loadFonts();\n    }\n  });\n\n  var loadFonts = function loadFonts() {\n    return _regeneratorRuntime.async(function loadFonts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              Roboto: require(\"native-base/Fonts/Roboto.ttf\")\n            }));\n\n          case 2:\n            setFontsLoaded(true);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    }\n  }, React.createElement(AppHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    }\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    }\n  }, React.createElement(CurrentTrip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    }\n  }), React.createElement(FormTour, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }), React.createElement(SwipCards, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    }\n  })));\n}","map":{"version":3,"sources":["/home/adn/Documentos/bootcamp/hackthejob/mobile-test-s7cjcbosxt/App.jsx"],"names":["React","Component","useEffect","useState","Container","Content","Icon","Text","CurrentTrip","AppHeader","SwipCards","FormTour","Font","App","fontsLoaded","setFontsLoaded","loadFonts","loadAsync","Roboto","require"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,IAAnC,QAA+C,aAA/C;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACUV,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACrBW,WADqB;AAAA,MACRC,cADQ;;AAE5Bb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACY,WAAL,EAAkB;AAChBE,MAAAA,SAAS;AACV;AACF,GAJQ,CAAT;;AAMA,MAAMA,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVJ,IAAI,CAACK,SAAL,CAAe;AACnBC,cAAAA,MAAM,EAAEC,OAAO,CAAC,8BAAD;AADI,aAAf,CADU;;AAAA;AAIhBJ,YAAAA,cAAc,CAAC,IAAD,CAAd;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAMA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { Container, Content, Icon, Text } from \"native-base\";\nimport CurrentTrip from \"./components/CurrentTrip\";\nimport AppHeader from \"./components/AppHeader\";\nimport SwipCards from \"./components/SwipCards\";\nimport FormTour from \"./components/FormTour\";\nimport * as Font from \"expo-font\";\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  useEffect(() => {\n    if (!fontsLoaded) {\n      loadFonts();\n    }\n  });\n\n  const loadFonts = async () => {\n    await Font.loadAsync({\n      Roboto: require(\"native-base/Fonts/Roboto.ttf\")\n    });\n    setFontsLoaded(true);\n  };\n  return (\n    <Container>\n      <AppHeader />\n      <Content>\n        <CurrentTrip />\n        <FormTour />\n        <SwipCards />\n      </Content>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}